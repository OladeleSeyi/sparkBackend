# NOTE: update this with your service name
service: serverless-nodejs-starter

# Create an optimized package for our functions
package:
  individually: true

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  # Set the primary  table name here so we can use it while testing locally
  requestTableName: ${self:custom.stage}-requestTable

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  lambdaHashingVersion: "20201221"
  # under process.env.
  environment:
    requestTableName: ${self:custom.requestTableName}
    BUYCOINS_PK: ${env:BUYCOINS_PK}
    BUYCOINS_SK: ${env:BUYCOINS_SK}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem

      Resource:
        - "Fn::GetAtt": [RequestTable, Arn]

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          method: get
  request:
    handler: functions/request.main
    events:
      - http:
          path: request
          method: post

resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}
  # DynamoDB
  - ${file(resources/dynamodb-table.yml)}
